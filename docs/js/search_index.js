var search_data = {"index":{"searchIndex":["lzws","accessioerror","allocateerror","baseerror","decompressorcorruptedsourceerror","file","notenoughdestinationbuffererror","notenoughdestinationerror","notenoughsourcebuffererror","option","readioerror","stream","abstract","delegates","raw","abstract","compressor","decompressor","reader","readerhelpers","classmethods","stat","writer","writerhelpers","classmethods","string","unexpectederror","usedaftercloseerror","validateerror","validation","writeioerror","<<()","advise()","append_io_data()","close()","close()","close()","close()","close()","close()","close_nonblock()","closed?()","closed?()","compress()","compress()","create_raw_stream()","create_raw_stream()","decompress()","decompress()","do_not_use_after_close()","each()","each_byte()","each_char()","each_line()","each_string()","empty?()","eof?()","finish()","finish_nonblock()","flush()","flush()","flush_io_data()","flush_nonblock()","get_compressor_options()","get_decompressor_options()","getbyte()","getc()","gets()","included()","included()","included()","initialize_source_buffer_length()","more_destination()","new()","new()","new()","new()","new()","new()","new()","open()","open()","print()","printf()","process_set_encoding_arguments()","putc()","puts()","raw_nonblock_wrapper()","raw_wrapper()","raw_wrapper()","read()","read()","read_buffer()","read_bytes_from_buffer()","read_more_nonblock()","read_nonblock()","readbyte()","readchar()","readline()","readlines()","readpartial()","readstring()","reset_buffer()","reset_io_advise()","reset_io_remainder()","reset_need_to_flush()","rewind()","rewind()","rewind()","rewind_nonblock()","set_encoding()","set_target_encoding()","target_encoding()","to_io()","transcode()","transcode_to_external()","transcode_to_internal()","ungetbyte()","ungetc()","ungetline()","ungetstring()","validate_bool()","validate_hash()","validate_not_negative_integer()","validate_positive_integer()","validate_proc()","validate_string()","validate_write()","validate_write_nonblock()","write()","write()","write_nonblock()","write_remaining_buffer()","write_remaining_buffer_nonblock()","write_result()","authors","license","readme"],"longSearchIndex":["lzws","lzws::accessioerror","lzws::allocateerror","lzws::baseerror","lzws::decompressorcorruptedsourceerror","lzws::file","lzws::notenoughdestinationbuffererror","lzws::notenoughdestinationerror","lzws::notenoughsourcebuffererror","lzws::option","lzws::readioerror","lzws::stream","lzws::stream::abstract","lzws::stream::delegates","lzws::stream::raw","lzws::stream::raw::abstract","lzws::stream::raw::compressor","lzws::stream::raw::decompressor","lzws::stream::reader","lzws::stream::readerhelpers","lzws::stream::readerhelpers::classmethods","lzws::stream::stat","lzws::stream::writer","lzws::stream::writerhelpers","lzws::stream::writerhelpers::classmethods","lzws::string","lzws::unexpectederror","lzws::usedaftercloseerror","lzws::validateerror","lzws::validation","lzws::writeioerror","lzws::stream::writerhelpers#<<()","lzws::stream::abstract#advise()","lzws::stream::reader#append_io_data()","lzws::stream::abstract#close()","lzws::stream::raw::abstract#close()","lzws::stream::raw::compressor#close()","lzws::stream::raw::decompressor#close()","lzws::stream::reader#close()","lzws::stream::writer#close()","lzws::stream::writer#close_nonblock()","lzws::stream::abstract#closed?()","lzws::stream::raw::abstract#closed?()","lzws::file::compress()","lzws::string::compress()","lzws::stream::reader#create_raw_stream()","lzws::stream::writer#create_raw_stream()","lzws::file::decompress()","lzws::string::decompress()","lzws::stream::raw::abstract#do_not_use_after_close()","lzws::stream::readerhelpers#each()","lzws::stream::readerhelpers#each_byte()","lzws::stream::readerhelpers#each_char()","lzws::stream::readerhelpers#each_line()","lzws::stream::readerhelpers#each_string()","lzws::stream::reader#empty?()","lzws::stream::reader#eof?()","lzws::stream::writer#finish()","lzws::stream::writer#finish_nonblock()","lzws::stream::raw::abstract#flush()","lzws::stream::writer#flush()","lzws::stream::reader#flush_io_data()","lzws::stream::writer#flush_nonblock()","lzws::option::get_compressor_options()","lzws::option::get_decompressor_options()","lzws::stream::readerhelpers#getbyte()","lzws::stream::readerhelpers#getc()","lzws::stream::readerhelpers#gets()","lzws::stream::delegates::included()","lzws::stream::readerhelpers::included()","lzws::stream::writerhelpers::included()","lzws::stream::reader#initialize_source_buffer_length()","lzws::stream::raw::abstract#more_destination()","lzws::stream::abstract::new()","lzws::stream::raw::abstract::new()","lzws::stream::raw::compressor::new()","lzws::stream::raw::decompressor::new()","lzws::stream::reader::new()","lzws::stream::stat::new()","lzws::stream::writer::new()","lzws::stream::readerhelpers::classmethods#open()","lzws::stream::writerhelpers::classmethods#open()","lzws::stream::writerhelpers#print()","lzws::stream::writerhelpers#printf()","lzws::stream::abstract#process_set_encoding_arguments()","lzws::stream::writerhelpers#putc()","lzws::stream::writerhelpers#puts()","lzws::stream::writer#raw_nonblock_wrapper()","lzws::stream::reader#raw_wrapper()","lzws::stream::writer#raw_wrapper()","lzws::stream::raw::decompressor#read()","lzws::stream::reader#read()","lzws::stream::reader#read_buffer()","lzws::stream::reader#read_bytes_from_buffer()","lzws::stream::reader#read_more_nonblock()","lzws::stream::reader#read_nonblock()","lzws::stream::readerhelpers#readbyte()","lzws::stream::readerhelpers#readchar()","lzws::stream::readerhelpers#readline()","lzws::stream::readerhelpers#readlines()","lzws::stream::reader#readpartial()","lzws::stream::readerhelpers#readstring()","lzws::stream::abstract#reset_buffer()","lzws::stream::abstract#reset_io_advise()","lzws::stream::reader#reset_io_remainder()","lzws::stream::reader#reset_need_to_flush()","lzws::stream::abstract#rewind()","lzws::stream::reader#rewind()","lzws::stream::writer#rewind()","lzws::stream::writer#rewind_nonblock()","lzws::stream::abstract#set_encoding()","lzws::stream::abstract#set_target_encoding()","lzws::stream::abstract#target_encoding()","lzws::stream::abstract#to_io()","lzws::stream::writer#transcode()","lzws::stream::reader#transcode_to_external()","lzws::stream::reader#transcode_to_internal()","lzws::stream::readerhelpers#ungetbyte()","lzws::stream::readerhelpers#ungetc()","lzws::stream::readerhelpers#ungetline()","lzws::stream::readerhelpers#ungetstring()","lzws::validation::validate_bool()","lzws::validation::validate_hash()","lzws::validation::validate_not_negative_integer()","lzws::validation::validate_positive_integer()","lzws::validation::validate_proc()","lzws::validation::validate_string()","lzws::stream::writer#validate_write()","lzws::stream::writer#validate_write_nonblock()","lzws::stream::raw::compressor#write()","lzws::stream::writer#write()","lzws::stream::writer#write_nonblock()","lzws::stream::writer#write_remaining_buffer()","lzws::stream::writer#write_remaining_buffer_nonblock()","lzws::stream::raw::abstract#write_result()","","",""],"info":[["LZWS","","LZWS.html","","<p>Ruby bindings for lzws library. Copyright © 2019 AUTHORS, MIT License.\n<p>Ruby bindings for lzws library. …\n"],["LZWS::AccessIOError","","LZWS/AccessIOError.html","",""],["LZWS::AllocateError","","LZWS/AllocateError.html","",""],["LZWS::BaseError","","LZWS/BaseError.html","",""],["LZWS::DecompressorCorruptedSourceError","","LZWS/DecompressorCorruptedSourceError.html","",""],["LZWS::File","","LZWS/File.html","","<p>LZWS::File module.\n"],["LZWS::NotEnoughDestinationBufferError","","LZWS/NotEnoughDestinationBufferError.html","",""],["LZWS::NotEnoughDestinationError","","LZWS/NotEnoughDestinationError.html","",""],["LZWS::NotEnoughSourceBufferError","","LZWS/NotEnoughSourceBufferError.html","",""],["LZWS::Option","","LZWS/Option.html","","<p>LZWS::Option module.\n"],["LZWS::ReadIOError","","LZWS/ReadIOError.html","",""],["LZWS::Stream","","LZWS/Stream.html","",""],["LZWS::Stream::Abstract","","LZWS/Stream/Abstract.html","","<p>LZWS::Stream::Abstract class.\n"],["LZWS::Stream::Delegates","","LZWS/Stream/Delegates.html","","<p>LZWS::Stream::Delegates module.\n"],["LZWS::Stream::Raw","","LZWS/Stream/Raw.html","",""],["LZWS::Stream::Raw::Abstract","","LZWS/Stream/Raw/Abstract.html","","<p>LZWS::Stream::Raw::Abstract class.\n"],["LZWS::Stream::Raw::Compressor","","LZWS/Stream/Raw/Compressor.html","","<p>LZWS::Stream::Raw::Compressor class.\n"],["LZWS::Stream::Raw::Decompressor","","LZWS/Stream/Raw/Decompressor.html","","<p>LZWS::Stream::Raw::Decompressor class.\n"],["LZWS::Stream::Reader","","LZWS/Stream/Reader.html","","<p>LZWS::Stream::Reader class.\n"],["LZWS::Stream::ReaderHelpers","","LZWS/Stream/ReaderHelpers.html","","<p>LZWS::Stream::ReaderHelpers module.\n"],["LZWS::Stream::ReaderHelpers::ClassMethods","","LZWS/Stream/ReaderHelpers/ClassMethods.html","","<p>LZWS::Stream::ReaderHelpers::ClassMethods module.\n"],["LZWS::Stream::Stat","","LZWS/Stream/Stat.html","","<p>LZWS::Stream::Stat class.\n"],["LZWS::Stream::Writer","","LZWS/Stream/Writer.html","","<p>LZWS::Stream::Writer class.\n"],["LZWS::Stream::WriterHelpers","","LZWS/Stream/WriterHelpers.html","","<p>LZWS::Stream::WriterHelpers module.\n"],["LZWS::Stream::WriterHelpers::ClassMethods","","LZWS/Stream/WriterHelpers/ClassMethods.html","","<p>LZWS::Stream::WriterHelpers::ClassMethods module.\n"],["LZWS::String","","LZWS/String.html","","<p>LZWS::String module.\n"],["LZWS::UnexpectedError","","LZWS/UnexpectedError.html","",""],["LZWS::UsedAfterCloseError","","LZWS/UsedAfterCloseError.html","",""],["LZWS::ValidateError","","LZWS/ValidateError.html","",""],["LZWS::Validation","","LZWS/Validation.html","","<p>LZWS::Validation module.\n"],["LZWS::WriteIOError","","LZWS/WriteIOError.html","",""],["<<","LZWS::Stream::WriterHelpers","LZWS/Stream/WriterHelpers.html#method-i-3C-3C","(object)",""],["advise","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-advise","()",""],["append_io_data","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-append_io_data","(io_data)","<p>– common –\n"],["close","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-close","()",""],["close","LZWS::Stream::Raw::Abstract","LZWS/Stream/Raw/Abstract.html#method-i-close","(&writer)",""],["close","LZWS::Stream::Raw::Compressor","LZWS/Stream/Raw/Compressor.html#method-i-close","(&writer)",""],["close","LZWS::Stream::Raw::Decompressor","LZWS/Stream/Raw/Decompressor.html#method-i-close","(&writer)",""],["close","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-close","()",""],["close","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-close","()",""],["close_nonblock","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-close_nonblock","(*options)",""],["closed?","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-closed-3F","()",""],["closed?","LZWS::Stream::Raw::Abstract","LZWS/Stream/Raw/Abstract.html#method-i-closed-3F","()",""],["compress","LZWS::File","LZWS/File.html#method-c-compress","(source, destination, options = {})",""],["compress","LZWS::String","LZWS/String.html#method-c-compress","(source, options = {})",""],["create_raw_stream","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-create_raw_stream","()",""],["create_raw_stream","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-create_raw_stream","()",""],["decompress","LZWS::File","LZWS/File.html#method-c-decompress","(source, destination, options = {})",""],["decompress","LZWS::String","LZWS/String.html#method-c-decompress","(source, options = {})",""],["do_not_use_after_close","LZWS::Stream::Raw::Abstract","LZWS/Stream/Raw/Abstract.html#method-i-do_not_use_after_close","()","<p>– close –\n"],["each","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-each","(&block)",""],["each_byte","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-each_byte","(&block)",""],["each_char","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-each_char","(&block)",""],["each_line","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-each_line","(&block)",""],["each_string","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-each_string","(each_proc, &block)",""],["empty?","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-empty-3F","()",""],["eof?","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-eof-3F","()",""],["finish","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-finish","(method_name)",""],["finish_nonblock","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-finish_nonblock","(method_name, *options)",""],["flush","LZWS::Stream::Raw::Abstract","LZWS/Stream/Raw/Abstract.html#method-i-flush","(&writer)","<p>– write –\n"],["flush","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-flush","()",""],["flush_io_data","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-flush_io_data","()",""],["flush_nonblock","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-flush_nonblock","(*options)",""],["get_compressor_options","LZWS::Option","LZWS/Option.html#method-c-get_compressor_options","(options, buffer_length_names)",""],["get_decompressor_options","LZWS::Option","LZWS/Option.html#method-c-get_decompressor_options","(options, buffer_length_names)",""],["getbyte","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-getbyte","()",""],["getc","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-getc","()","<p>– char –\n"],["gets","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-gets","(separator = $OUTPUT_RECORD_SEPARATOR, limit = nil)","<p>– lines –\n"],["included","LZWS::Stream::Delegates","LZWS/Stream/Delegates.html#method-c-included","(klass)",""],["included","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-c-included","(klass)",""],["included","LZWS::Stream::WriterHelpers","LZWS/Stream/WriterHelpers.html#method-c-included","(klass)",""],["initialize_source_buffer_length","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-initialize_source_buffer_length","()",""],["more_destination","LZWS::Stream::Raw::Abstract","LZWS/Stream/Raw/Abstract.html#method-i-more_destination","(&writer)",""],["new","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-c-new","(io, options = {})",""],["new","LZWS::Stream::Raw::Abstract","LZWS/Stream/Raw/Abstract.html#method-c-new","(native_stream)",""],["new","LZWS::Stream::Raw::Compressor","LZWS/Stream/Raw/Compressor.html#method-c-new","(options = {})",""],["new","LZWS::Stream::Raw::Decompressor","LZWS/Stream/Raw/Decompressor.html#method-c-new","(options = {})",""],["new","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-c-new","(source_io, options = {}, *args)",""],["new","LZWS::Stream::Stat","LZWS/Stream/Stat.html#method-c-new","(stat)",""],["new","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-c-new","(destination_io, options = {}, *args)",""],["open","LZWS::Stream::ReaderHelpers::ClassMethods","LZWS/Stream/ReaderHelpers/ClassMethods.html#method-i-open","(file_path, *args, &block)",""],["open","LZWS::Stream::WriterHelpers::ClassMethods","LZWS/Stream/WriterHelpers/ClassMethods.html#method-i-open","(file_path, *args, &block)",""],["print","LZWS::Stream::WriterHelpers","LZWS/Stream/WriterHelpers.html#method-i-print","(*objects, field_separator: $OUTPUT_FIELD_SEPARATOR, record_separator: $OUTPUT_RECORD_SEPARATOR)",""],["printf","LZWS::Stream::WriterHelpers","LZWS/Stream/WriterHelpers.html#method-i-printf","(*args)",""],["process_set_encoding_arguments","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-process_set_encoding_arguments","(*args)",""],["putc","LZWS::Stream::WriterHelpers","LZWS/Stream/WriterHelpers.html#method-i-putc","(object, encoding: ::Encoding::BINARY)",""],["puts","LZWS::Stream::WriterHelpers","LZWS/Stream/WriterHelpers.html#method-i-puts","(*objects)",""],["raw_nonblock_wrapper","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-raw_nonblock_wrapper","(method_name, *args)",""],["raw_wrapper","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-raw_wrapper","(method_name, *args)",""],["raw_wrapper","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-raw_wrapper","(method_name, *args)",""],["read","LZWS::Stream::Raw::Decompressor","LZWS/Stream/Raw/Decompressor.html#method-i-read","(source, &writer)",""],["read","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-read","(bytes_to_read = nil, out_buffer = nil)","<p>– synchronous –\n"],["read_buffer","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-read_buffer","(out_buffer)",""],["read_bytes_from_buffer","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-read_bytes_from_buffer","(bytes_to_read, out_buffer)",""],["read_more_nonblock","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-read_more_nonblock","(bytes_to_read, out_buffer, &_block)",""],["read_nonblock","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-read_nonblock","(bytes_to_read, out_buffer = nil, *options)",""],["readbyte","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-readbyte","()",""],["readchar","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-readchar","()",""],["readline","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-readline","()",""],["readlines","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-readlines","()",""],["readpartial","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-readpartial","(bytes_to_read, out_buffer = nil)","<p>– asynchronous –\n"],["readstring","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-readstring","(each_proc)","<p>– common –\n"],["reset_buffer","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-reset_buffer","()","<p>– buffer –\n"],["reset_io_advise","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-reset_io_advise","()","<p>– advise –\n"],["reset_io_remainder","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-reset_io_remainder","()",""],["reset_need_to_flush","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-reset_need_to_flush","()",""],["rewind","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-rewind","()","<p>– etc –\n"],["rewind","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-rewind","()",""],["rewind","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-rewind","()",""],["rewind_nonblock","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-rewind_nonblock","(*options)",""],["set_encoding","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-set_encoding","(*args)","<p>– encoding –\n"],["set_target_encoding","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-set_target_encoding","(name, value)",""],["target_encoding","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-target_encoding","()",""],["to_io","LZWS::Stream::Abstract","LZWS/Stream/Abstract.html#method-i-to_io","()",""],["transcode","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-transcode","(data)","<p>– common –\n"],["transcode_to_external","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-transcode_to_external","(data)","<p>We should be able to return data back to buffer. We won’t use any transcode options because transcoded …\n"],["transcode_to_internal","LZWS::Stream::Reader","LZWS/Stream/Reader.html#method-i-transcode_to_internal","(data)",""],["ungetbyte","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-ungetbyte","(byte)",""],["ungetc","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-ungetc","(char)",""],["ungetline","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-ungetline","(line)",""],["ungetstring","LZWS::Stream::ReaderHelpers","LZWS/Stream/ReaderHelpers.html#method-i-ungetstring","(string)",""],["validate_bool","LZWS::Validation","LZWS/Validation.html#method-c-validate_bool","(value)",""],["validate_hash","LZWS::Validation","LZWS/Validation.html#method-c-validate_hash","(value)",""],["validate_not_negative_integer","LZWS::Validation","LZWS/Validation.html#method-c-validate_not_negative_integer","(value)",""],["validate_positive_integer","LZWS::Validation","LZWS/Validation.html#method-c-validate_positive_integer","(value)",""],["validate_proc","LZWS::Validation","LZWS/Validation.html#method-c-validate_proc","(value)",""],["validate_string","LZWS::Validation","LZWS/Validation.html#method-c-validate_string","(value)",""],["validate_write","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-validate_write","()",""],["validate_write_nonblock","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-validate_write_nonblock","()",""],["write","LZWS::Stream::Raw::Compressor","LZWS/Stream/Raw/Compressor.html#method-i-write","(source, &writer)",""],["write","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-write","(*objects)","<p>– synchronous –\n"],["write_nonblock","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-write_nonblock","(object, *options)","<p>IO write nonblock can raise wait writable error. After resolving this error user may provide same content …\n"],["write_remaining_buffer","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-write_remaining_buffer","()",""],["write_remaining_buffer_nonblock","LZWS::Stream::Writer","LZWS/Stream/Writer.html#method-i-write_remaining_buffer_nonblock","(*options)",""],["write_result","LZWS::Stream::Raw::Abstract","LZWS/Stream/Raw/Abstract.html#method-i-write_result","(&_writer)",""],["AUTHORS","","AUTHORS.html","","<p>Andrew Aladjev\n"],["LICENSE","","LICENSE.html","","<p>MIT License\n<p>Copyright © 2019 AUTHORS\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","README_md.html","","<p>Ruby bindings for lzws library\n<p>| AppVeyor | Jenkins | Github actions | Codecov | Gem |\n| :------: | :-----: ...\n"]]}}